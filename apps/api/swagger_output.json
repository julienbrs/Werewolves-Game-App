{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "WOLFO API",
    "description": "API for the application wolfo"
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Everything about user and authentication"
    },
    {
      "name": "Game",
      "description": "Everything about game"
    },
    {
      "name": "Chatroom",
      "description": "Everything about chat"
    },
    {
      "name": "Player",
      "description": "Everything about player which refers to the link between user and game"
    },
    {
      "name": "Vote",
      "description": "Everything about vote"
    },
    {
      "name": "Notification",
      "description": "Everything about notification"
    }
  ],
  "paths": {
    "/api/users/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login from token",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create user",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "User  ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User  "
                    },
                    "token": {
                      "type": "string",
                      "example": "token"
                    }
                  },
                  "required": [
                    "message",
                    "token"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User  "
                    },
                    "token": {
                      "type": "string",
                      "example": "token"
                    }
                  },
                  "required": [
                    "message",
                    "token"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Name already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Name already exists"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Name already exists"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User  ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "new token"
                    },
                    "message": {
                      "type": "string",
                      "example": "User  "
                    }
                  },
                  "required": [
                    "token",
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "new token"
                    },
                    "message": {
                      "type": "string",
                      "example": "User  "
                    }
                  },
                  "required": [
                    "token",
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unknown error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Name already exists"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Name already exists"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unknown error"
                }
              },
              "required": [
                "message"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "in": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "schema": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "delete user by anonymizing him and making him dead in all games where he is alive",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User deleted"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User deleted"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error while deleting",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error while deleting"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error while deleting"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "new token"
                    },
                    "message": {
                      "type": "string",
                      "example": "User logged in"
                    }
                  },
                  "required": [
                    "token",
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "new token"
                    },
                    "message": {
                      "type": "string",
                      "example": "User logged in"
                    }
                  },
                  "required": [
                    "token",
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Wrong password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Name not found"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Name not found"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Wrong password"
                }
              },
              "required": [
                "message"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "in": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "schema": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/games/": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Get all games not join by state",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Games not joined",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "games": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Game"
                      }
                    }
                  },
                  "required": [
                    "games"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "games": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Game"
                      }
                    }
                  },
                  "required": [
                    "games"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Mauvaise Requête"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Game"
        ],
        "summary": "Create game",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Game  ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "game": {
                      "$ref": "#/components/schemas/Game"
                    }
                  },
                  "required": [
                    "game"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "game": {
                      "$ref": "#/components/schemas/Game"
                    }
                  },
                  "required": [
                    "game"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Name too long"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Name too long"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error"
                }
              },
              "required": [
                "message"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/games/mygames": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Get all games that I join",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "My games",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "games": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Game"
                      }
                    }
                  },
                  "required": [
                    "games"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "games": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Game"
                      }
                    }
                  },
                  "required": [
                    "games"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Mauvaise Requête",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/games/{id}/join": {
      "post": {
        "tags": [
          "Game"
        ],
        "summary": "Join game",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Game join",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Game join"
                    },
                    "player": {
                      "$ref": "#/components/schemas/Player"
                    }
                  },
                  "required": [
                    "message",
                    "player"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Game join"
                    },
                    "player": {
                      "$ref": "#/components/schemas/Player"
                    }
                  },
                  "required": [
                    "message",
                    "player"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Mauvaise Requête",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/games/{id}/leave": {
      "post": {
        "tags": [
          "Game"
        ],
        "summary": "Leave game",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Game left",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Game left"
                    },
                    "player": {
                      "$ref": "#/components/schemas/Player"
                    }
                  },
                  "required": [
                    "message",
                    "player"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Game left"
                    },
                    "player": {
                      "$ref": "#/components/schemas/Player"
                    }
                  },
                  "required": [
                    "message",
                    "player"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Mauvaise Requête",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/games/{id}": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Get game by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Game found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "game": {
                      "$ref": "#/components/schemas/Game"
                    }
                  },
                  "required": [
                    "game"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "game": {
                      "$ref": "#/components/schemas/Game"
                    }
                  },
                  "required": [
                    "game"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/chatrooms/{id}/messages": {
      "get": {
        "tags": [
          "Chatroom"
        ],
        "summary": "Get today messages from chatroom",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get today messages from chatroom",
            "$data": [
              {
                "$ref": "#/components/schemas/Message"
              }
            ]
          },
          "400": {
            "description": "Bad chatroom id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad chatroom id"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad chatroom id"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Non Autorisé"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Créé"
          },
          "400": {
            "description": "Mauvaise Requête"
          },
          "500": {
            "description": "Erreur Interne du Serveur"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "example": "any"
                  },
                  "authorId": {
                    "example": "any"
                  },
                  "gameId": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/chatrooms/{id}/history": {
      "get": {
        "tags": [
          "Chatroom"
        ],
        "summary": "Get history",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get history",
            "$data": [
              {
                "$ref": "#/components/schemas/Message"
              }
            ]
          },
          "400": {
            "description": "Mauvaise Requête"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/chatrooms/{id}/readers": {
      "get": {
        "tags": [
          "Chatroom"
        ],
        "summary": "Get readers",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Mauvaise Requête"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/chatrooms/{id}/writers": {
      "get": {
        "tags": [
          "Chatroom"
        ],
        "summary": "Get writers",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Mauvaise Requête"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/chatrooms/{id}/permissions": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Mauvaise Requête"
          }
        }
      }
    },
    "/api/chatrooms/{id}/adduserdead": {
      "post": {
        "tags": [
          "Chatroom"
        ],
        "summary": "Add a dead person to spiritism chatroom",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Add user to chatroom",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chatroom": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "chatroom name"
                        },
                        "gameId": {
                          "type": "number",
                          "example": 1
                        },
                        "readers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "playerId": {
                                "type": "string",
                                "example": "playerId"
                              },
                              "gameId": {
                                "type": "number",
                                "example": 1
                              }
                            },
                            "required": [
                              "playerId",
                              "gameId"
                            ]
                          }
                        },
                        "writers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "playerId": {
                                "type": "string",
                                "example": "playerId"
                              },
                              "gameId": {
                                "type": "number",
                                "example": 1
                              }
                            },
                            "required": [
                              "playerId",
                              "gameId"
                            ]
                          }
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "gameId",
                        "readers",
                        "writers"
                      ]
                    }
                  },
                  "required": [
                    "chatroom"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chatroom": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "chatroom name"
                        },
                        "gameId": {
                          "type": "number",
                          "example": 1
                        },
                        "readers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "playerId": {
                                "type": "string",
                                "example": "playerId"
                              },
                              "gameId": {
                                "type": "number",
                                "example": 1
                              }
                            },
                            "required": [
                              "playerId",
                              "gameId"
                            ]
                          }
                        },
                        "writers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "playerId": {
                                "type": "string",
                                "example": "playerId"
                              },
                              "gameId": {
                                "type": "number",
                                "example": 1
                              }
                            },
                            "required": [
                              "playerId",
                              "gameId"
                            ]
                          }
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "gameId",
                        "readers",
                        "writers"
                      ]
                    }
                  },
                  "required": [
                    "chatroom"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, failed to add user to chatroom",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request, missing parameters"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request, missing parameters"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Bad request, failed to add user to chatroom"
                }
              },
              "required": [
                "message"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "gameId": {
                    "example": "any"
                  },
                  "userDeadId": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/games/{gameId}/players/": {
      "get": {
        "tags": [
          "Player"
        ],
        "summary": "Get all players",
        "description": "",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Player"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Player"
                }
              }
            }
          },
          "404": {
            "description": "Players not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/games/{gameId}/players/{id}": {
      "get": {
        "tags": [
          "Player"
        ],
        "summary": "Get player by id",
        "description": "",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Player"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Player"
                }
              }
            }
          },
          "404": {
            "description": "Player not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Player"
        ],
        "summary": "Update player",
        "description": "",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Player"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Player"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/notifications/": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get all notifications",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Non Trouvé"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/games/{gameId}/players/{id}/elections/{electionId}/": {
      "get": {
        "tags": [
          "Vote"
        ],
        "summary": "Get all votes from an election",
        "description": "",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "electionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vote found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vote not found"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vote not found"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Vote",
              "$message": "Vote found"
            }
          },
          "400": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Election ID must be a number"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Election ID must be a number"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "An error occurred"
                }
              },
              "required": [
                "message"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "electionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Vote  ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vote",
                  "$message": "Vote  "
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Vote",
                  "$message": "Vote  "
                }
              }
            }
          },
          "400": {
            "description": "An error occured",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "You can't vote for yourself!"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "You can't vote for yourself!"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "An error occured"
                }
              },
              "required": [
                "message"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "electionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Mauvaise Requête"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "req": {
                    "example": "any"
                  },
                  "targetId": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "electionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Mauvaise Requête"
          }
        }
      }
    },
    "/api/games/{gameId}/players/{id}/elections/{electionId}/all": {
      "post": {
        "tags": [
          "Vote"
        ],
        "summary": "Get all votes from an election",
        "description": "",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "electionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Mauvaise Requête"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "addGame": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Game X"
          },
          "state": {
            "type": "string",
            "example": "LOBBY"
          },
          "minPlayer": {
            "type": "number",
            "example": 5
          },
          "maxPlayer": {
            "type": "number",
            "example": 20
          },
          "wolfProb": {
            "type": "number",
            "example": 0.5
          },
          "seerProb": {
            "type": "number",
            "example": 0.5
          },
          "spiritProb": {
            "type": "number",
            "example": 0.5
          },
          "contProb": {
            "type": "number",
            "example": 0.5
          },
          "insomProb": {
            "type": "number",
            "example": 0.5
          },
          "startDay": {
            "type": "string",
            "example": "2023-04-15T22:26:00+00:00"
          },
          "endDay": {
            "type": "string",
            "example": "2023-04-15T20:20:20+00:00"
          },
          "deadline": {
            "type": "string",
            "example": "2023-05-16T20:20:20+00:00"
          }
        },
        "xml": {
          "name": "addGame"
        }
      },
      "Game": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Game X"
          },
          "state": {
            "type": "string",
            "example": "LOBBY"
          },
          "minPlayer": {
            "type": "number",
            "example": 5
          },
          "maxPlayer": {
            "type": "number",
            "example": 20
          },
          "wolfProb": {
            "type": "number",
            "example": 0.5
          },
          "seerProb": {
            "type": "number",
            "example": 0.5
          },
          "spiritProb": {
            "type": "number",
            "example": 0.5
          },
          "contProb": {
            "type": "number",
            "example": 0.5
          },
          "insomProb": {
            "type": "number",
            "example": 0.5
          },
          "startDay": {
            "type": "string",
            "example": "2023-04-15T22:26:00+00:00"
          },
          "endDay": {
            "type": "string",
            "example": "2023-04-15T20:20:20+00:00"
          },
          "deadline": {
            "type": "string",
            "example": "2023-05-16T20:20:20+00:00"
          },
          "id": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "Game"
        }
      },
      "addUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Paul"
          },
          "password": {
            "type": "string",
            "example": "123456"
          }
        },
        "xml": {
          "name": "addUser"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Paul"
          },
          "password": {
            "type": "string",
            "example": "123456"
          },
          "id": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "chatRoomId": {
            "type": "number",
            "example": 1
          },
          "content": {
            "type": "string",
            "example": "blabla"
          },
          "authorId": {
            "type": "string",
            "example": "Paul"
          },
          "gameId": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "type": "object",
            "properties": {}
          },
          "updatedAt": {
            "type": "object",
            "properties": {}
          }
        },
        "xml": {
          "name": "Message"
        }
      },
      "addChatroom": {
        "type": "object",
        "properties": {},
        "xml": {
          "name": "addChatroom"
        }
      },
      "Player": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "1"
          },
          "gameId": {
            "type": "number",
            "example": 1
          },
          "role": {
            "type": "string",
            "example": "VILLAGER"
          },
          "power": {
            "type": "string",
            "example": "NONE"
          },
          "state": {
            "type": "string",
            "example": "ALIVE"
          },
          "createdAt": {
            "type": "object",
            "properties": {}
          },
          "updatedAt": {
            "type": "object",
            "properties": {}
          },
          "usedPower": {
            "type": "boolean",
            "example": false
          }
        },
        "xml": {
          "name": "Player"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}